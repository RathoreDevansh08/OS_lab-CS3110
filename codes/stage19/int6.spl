[PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE + 1] + 9] = 7;                           //System call number for read

alias userSP R0;                                                                    
userSP = SP;

[PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE + 1] + 13] = SP;                         //Saving user SP into UPTR
SP = [PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE + 1] + 11] * 512 - 1;               //switch to kernel stack

alias fileDescriptor R1;
fileDescriptor = [[PTBR + 2 * ((userSP - 4) / 512)] * 512 + ((userSP - 4) % 512)];  

if(fileDescriptor != -1) then                                                       // If fd!=-1, then set return val to -1
    [[PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = -1;
else
    alias wordAddr R2;
    wordAddr = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + ((userSP - 3) % 512)];    

    R3 = wordAddr;                                                                  
    multipush(R0, R1, R2);                                                          
    R1 = 4;                                                                         // R1 -> Terminal Read function number
    R2 = [SYSTEM_STATUS_TABLE + 1];                                                 // R2 -> Current PID
    call DEVICE_MANAGER;                                                            
    multipop(R0, R1, R2);                                                           
    
    [[PTBR + 2 * ((userSP - 1) / 512)] * 512 + ((userSP - 1) % 512)] = 0;           // Return value set to 0, indicating success
endif;

[PROCESS_TABLE + 16 * [SYSTEM_STATUS_TABLE + 1] + 9] = 0;                           // Mode flag set to 0, indicates user mode
SP = userSP;                                                                        // Get back user SP

ireturn;
